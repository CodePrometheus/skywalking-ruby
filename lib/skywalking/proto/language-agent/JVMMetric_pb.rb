# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: language-agent/JVMMetric.proto

require 'google/protobuf'

require_relative '../common/Common_pb'
require_relative '../common/Command_pb'


descriptor_data = "\n\x1elanguage-agent/JVMMetric.proto\x12\rskywalking.v3\x1a\x13\x63ommon/Common.proto\x1a\x14\x63ommon/Command.proto\"j\n\x13JVMMetricCollection\x12)\n\x07metrics\x18\x01 \x03(\x0b\x32\x18.skywalking.v3.JVMMetric\x12\x0f\n\x07service\x18\x02 \x01(\t\x12\x17\n\x0fserviceInstance\x18\x03 \x01(\t\"\xfb\x01\n\tJVMMetric\x12\x0c\n\x04time\x18\x01 \x01(\x03\x12\x1f\n\x03\x63pu\x18\x02 \x01(\x0b\x32\x12.skywalking.v3.CPU\x12%\n\x06memory\x18\x03 \x03(\x0b\x32\x15.skywalking.v3.Memory\x12-\n\nmemoryPool\x18\x04 \x03(\x0b\x32\x19.skywalking.v3.MemoryPool\x12\x1d\n\x02gc\x18\x05 \x03(\x0b\x32\x11.skywalking.v3.GC\x12%\n\x06thread\x18\x06 \x01(\x0b\x32\x15.skywalking.v3.Thread\x12#\n\x05\x63lazz\x18\x07 \x01(\x0b\x32\x14.skywalking.v3.Class\"T\n\x06Memory\x12\x0e\n\x06isHeap\x18\x01 \x01(\x08\x12\x0c\n\x04init\x18\x02 \x01(\x03\x12\x0b\n\x03max\x18\x03 \x01(\x03\x12\x0c\n\x04used\x18\x04 \x01(\x03\x12\x11\n\tcommitted\x18\x05 \x01(\x03\"o\n\nMemoryPool\x12%\n\x04type\x18\x01 \x01(\x0e\x32\x17.skywalking.v3.PoolType\x12\x0c\n\x04init\x18\x02 \x01(\x03\x12\x0b\n\x03max\x18\x03 \x01(\x03\x12\x0c\n\x04used\x18\x04 \x01(\x03\x12\x11\n\tcommitted\x18\x05 \x01(\x03\"H\n\x02GC\x12%\n\x05phase\x18\x01 \x01(\x0e\x32\x16.skywalking.v3.GCPhase\x12\r\n\x05\x63ount\x18\x02 \x01(\x03\x12\x0c\n\x04time\x18\x03 \x01(\x03\"\xcd\x01\n\x06Thread\x12\x11\n\tliveCount\x18\x01 \x01(\x03\x12\x13\n\x0b\x64\x61\x65monCount\x18\x02 \x01(\x03\x12\x11\n\tpeakCount\x18\x03 \x01(\x03\x12 \n\x18runnableStateThreadCount\x18\x04 \x01(\x03\x12\x1f\n\x17\x62lockedStateThreadCount\x18\x05 \x01(\x03\x12\x1f\n\x17waitingStateThreadCount\x18\x06 \x01(\x03\x12$\n\x1ctimedWaitingStateThreadCount\x18\x07 \x01(\x03\"a\n\x05\x43lass\x12\x18\n\x10loadedClassCount\x18\x01 \x01(\x03\x12\x1f\n\x17totalUnloadedClassCount\x18\x02 \x01(\x03\x12\x1d\n\x15totalLoadedClassCount\x18\x03 \x01(\x03*\xa4\x02\n\x08PoolType\x12\x14\n\x10\x43ODE_CACHE_USAGE\x10\x00\x12\x10\n\x0cNEWGEN_USAGE\x10\x01\x12\x10\n\x0cOLDGEN_USAGE\x10\x02\x12\x12\n\x0eSURVIVOR_USAGE\x10\x03\x12\x11\n\rPERMGEN_USAGE\x10\x04\x12\x13\n\x0fMETASPACE_USAGE\x10\x05\x12\x0f\n\x0bZHEAP_USAGE\x10\x06\x12 \n\x1c\x43OMPRESSED_CLASS_SPACE_USAGE\x10\x07\x12\x1f\n\x1b\x43ODEHEAP_NON_NMETHODS_USAGE\x10\x08\x12$\n CODEHEAP_PROFILED_NMETHODS_USAGE\x10\t\x12(\n$CODEHEAP_NON_PROFILED_NMETHODS_USAGE\x10\n*\'\n\x07GCPhase\x12\x07\n\x03NEW\x10\x00\x12\x07\n\x03OLD\x10\x01\x12\n\n\x06NORMAL\x10\x02\x32\x62\n\x16JVMMetricReportService\x12H\n\x07\x63ollect\x12\".skywalking.v3.JVMMetricCollection\x1a\x17.skywalking.v3.Commands\"\x00\x42\x93\x01\n3org.apache.skywalking.apm.network.language.agent.v3P\x01Z:skywalking.apache.org/repo/goapi/collect/language/agent/v3\xaa\x02\x1dSkyWalking.NetworkProtocol.V3b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool
pool.add_serialized_file(descriptor_data)

module Skywalking
  module V3
    JVMMetricCollection = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("skywalking.v3.JVMMetricCollection").msgclass
    JVMMetric = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("skywalking.v3.JVMMetric").msgclass
    Memory = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("skywalking.v3.Memory").msgclass
    MemoryPool = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("skywalking.v3.MemoryPool").msgclass
    GC = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("skywalking.v3.GC").msgclass
    Thread = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("skywalking.v3.Thread").msgclass
    Class = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("skywalking.v3.Class").msgclass
    PoolType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("skywalking.v3.PoolType").enummodule
    GCPhase = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("skywalking.v3.GCPhase").enummodule
  end
end
